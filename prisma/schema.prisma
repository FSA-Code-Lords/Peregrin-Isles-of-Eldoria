// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id          Int        @id @default(autoincrement())
  name        String     @unique @db.VarChar(255)
  description String     @db.Text
  locations   Location[]
  quests      Quest[]
}

model Quest {
  id                Int        @id @default(autoincrement())
  name              String     @unique @db.VarChar(255)
  description       String     @db.Text
  completionMessage String     @db.Text
  failedMessage     String     @db.Text
  isCompleted       Boolean    @default(false) @db.Boolean
  locations         Location[]
  monsters          Monster[]
  choices           Choice[]
  items             Item[]
}

model Choice {
  id              Int        @id @default(autoincrement())
  name            String     @unique @db.VarChar(255)
  action          String     @db.Text
  result          String     @db.Text
  locations       Location[]
  quests          Quest[]
  followUpChoices Choice[]   @relation("choices")
  previousChoices Choice[]   @relation("choices")
}

model Monster {
  id       Int        @id @default(autoincrement())
  name     String     @unique @db.VarChar(255)
  hp       Int
  atk      Int
  dodge    Int
  location Location[]
  quests   Quest[]
}

model Location {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(50)
  description String    @db.Text
  locationImg String    @db.Text
  monsters    Monster[]
  choices     Choice[]
  quests      Quest[]
  items       Item[]
}

model Class {
  id          Int    @id @default(autoincrement())
  name        String @unique @db.VarChar(255)
  description String @db.Text
  hpChange    Int
  atkChange   Int
  dodgeChange Int
}

model Race {
  id          Int    @id @default(autoincrement())
  name        String @unique @db.VarChar(255)
  description String @db.Text
  hpChange    Int
  atkChange   Int
  dodgeChange Int
}

model Save_Data {
  id             Int    @id @default(autoincrement())
  serializedData String @db.Text
  userId         Int
  user           User   @relation(fields: [userId], references: [id])
}

model User {
  id       Int         @id @default(autoincrement())
  username String      @unique @db.VarChar(255)
  password String      @db.VarChar(255)
  isAdmin  Boolean     @default(false) @db.Boolean
  isBanned Boolean     @default(false) @db.Boolean
  saveData Save_Data[]
}
